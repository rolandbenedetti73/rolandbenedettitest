import { NextSeo } from "next-seo";

import PageHeader from "../../components/page-header";
import Layout from "../../components/layout";
import { PostGrid } from "../../components/grid";

import { getAllArticles } from "../../lib/Articles";

export default function SSGISRExampleTemplate({ articles }) {
  return (
    <Layout>
      <NextSeo
        title="Decoupled Next PCC - ISR Example"
        description="Generated by create-pantheon-decoupled-kit."
      />
      <PageHeader title="Articles" />
      <div className="mt-8 prose lg:prose-xl max-w-lg mx-auto lg:max-w-screen-lg">
        <p>
          <em>
            By default, this starter kit is optimized for SSR and Edge Caching
            on Pantheon. This example instead uses Incremental Static
            Regeneration and is provided as a reference for cases where Next.js
            static generation options would be beneficial.
          </em>
        </p>
      </div>
      <section>
        <PostGrid contentType="posts" data={articles} />
      </section>
    </Layout>
  );
}

export async function getStaticProps() {
  const articles = await getAllArticles();

  return {
    props: {
      articles,
    },
    revalidate: 60,
  };
}
